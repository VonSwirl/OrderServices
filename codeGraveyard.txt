Here is work that didnt work. It was hard work! but alas it didnt work.



     Order.findOne({orderRef: req.params.orderRef})
     .then(function (order) {
         Order.findOne({
             products: { $elemMatch: { ean: req.body.ean } },
 
         }).then(function (products) {
             console.log(products);
             //order.distinct("item.sku", { dept: "A" })
             res.send('Products Stock Level Updated');
 
         }).catch(next);
     }); 

     Order.findOneAndUpdate({
                orderRef: req.params.orderRef,
                products: { $elemMatch: { ean: req.body.ean } }
            },
                {
                    $set: {
                        "products.$.nowAvailable": true,
                        "products.$.stockQty": "order.products.$.qtyReq.value"
                    }
                }
            ).then(function () {
                Order.findOne({
                    orderRef: req.params.orderRef
                }
                ).then(function (order) {
                    console.log(order);
                    res.send('Products Stock Level Updated');
                });
            }).catch(next); 

    //The data product stocked is only quiered if the correct details are in place.
    if (newOrder != null) {
        //Checks to see if any products need stock re-ordering to complete the Order.
        Order.findOneAndUpdate(
            {
                orderRef: order.orderRef,
                products: { $elemMatch: { ean: req.body.ean } }
            },
            {
                $set: { "products.$.nowAvailable": true }
            }
        ).catch(next);
    }